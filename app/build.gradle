plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'

    // For more details visit https://developer.android.com/guide/navigation/navigation-pass-data#Safe-args

}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.flyconcept.datacountries"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        viewBinding true
    }
    testOptions {
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    tasks.withType(Test).configureEach {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
            outputs.upToDateWhen { false }
            showStandardStreams = true
            showCauses true
            showStackTraces true
            // set options for log level DEBUG and INFO
            debug {
                events "started", "passed", "skipped", "failed", "standardOut", "standardError"
                exceptionFormat "full"
            }
            info.events = debug.events
            info.exceptionFormat = debug.exceptionFormat

            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                    def startItem = '|  ', endItem = '  |'
                    def repeatLength = startItem.length() + output.length() + endItem.length()
                    println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
                }
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.karumi:dexter:6.2.2'

    // Image loading library
    // For more detail visit the link: https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // Room components
    // Reference Link: https://developer.android.com/training/data-storage/room


    // These dependencies are already added if you have created the project with BottomNavigationActivity.
    // Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'

    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'

    implementation 'androidx.palette:palette-ktx:1.0.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    implementation "com.google.dagger:dagger:2.41"
    implementation "com.google.dagger:dagger-android-support:2.28.3"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    kapt "com.google.dagger:dagger-compiler:2.41"
    kapt "com.google.dagger:dagger-android-processor:2.41"

    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    testImplementation "org.mockito:mockito-inline:4.3.1"
    testImplementation "org.mockito:mockito-junit-jupiter:4.3.1"
    // RxJava
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'android.arch.core:core-testing:1.1.1'

    def androidx_test_runner_version = '1.4.1-alpha05'
    def androidx_test_rules_version = '1.4.1-alpha05'
    def androidx_test_monitor_version = '1.5.0'
    def androidx_test_orchestrator_version = '1.2.0-alpha03'
    def androidx_test_ext_core_version = '1.4.1-alpha05'
    def androidx_test_ext_junit_version = '1.1.4-alpha05'
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_rules_version"
    androidTestImplementation "androidx.test:monitor:$androidx_test_monitor_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test_ext_junit_version"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_ext_core_version"
    androidTestUtil "androidx.test:orchestrator:$androidx_test_orchestrator_version"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}